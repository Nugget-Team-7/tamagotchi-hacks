== WEB SERVER FUZZING ATTEMPTS ==

INITIAL RECON
//returns expected network manager page // wget http://192.168.4.1
//index.html returned expected network manager page, .htm 404d //w get http://192.168.4.1/index.html; wget http://192.168.4.1/index.htm; wget http://192.168.4.1/#p;
//posted "check device" page and tama failed on not finding ssid, but attempted to connect // curl -d "s=one&p=two" -X POST -o CURL-POST.txt http://192.168.4.1/#p
curl -d "s=one&p=two" -X POST -i -o CURL-POST.txt http://192.168.4.1/#p

FFUF
//dumped lots of 404s //ffuf -w ~/SecLists/Discovery/Web-Content/common.txt -u http://192.168.4.1/FUZZ -o tamaa-ffuf.html -of html
//only returned strings that began with # // ffuf -w ~/SecLists/Fuzzing/big-list-of-naughty-strings.txt -u http://192.168.4.1/FUZZ -o tamaa-ffuf.html -of html -X POST
//attempts to connect to any network defined in s and p paramatersffuf -w ~/SecLists/Discovery/Web-Content/common.txt -u http://192.168.4.1/#p -o post-tamaa-fuff -of html -X POST -d "s=FUZZ\&p=FUZZ"
// ffuf -w /home/kali/SecLists/Fuzzing/command-injection-commix.txt -u http://192.168.4.1/FUZZ -o ffuf/seclists-fuzz-comamand-injection-commix-ffuf.html -of html
//ffuf -w /home/kali/SecLists/Fuzzing/Unicode.txt -u http://192.168.4.1/FUZZ -o ffuf/seclists-fuzz-Unicode-ffuf.html -of html;
//ffuf -w /home/kali/SecLists/Fuzzing/big-list-of-naughty-strings.txt -u http://192.168.4.1/FUZZ -o ffuf/seclists-fuzz-big-list-of-naughty-strings-ffuf.html -of html;
//ffuf -w ~/SecLists/Discovery/Web-Content/common.txt -u http://192.168.4.1/FUZZ -o ffuf/seclists-discovery-web-content-common-ffuf.html -of html

BOOFUZZ:
source ~/boofuzz/env/bin/activate
cd ~/boofuzz/scripts
python http_with_body.py
// returned proper error codes, no breaks seen in data yet // need to review more

MDK4
//no result // sudo mdk4 wlan0 f -s p c a -m s t c d -p 500
sudo mdk4 wlan1 f -s a c -m s t c d -p 500
sudo mdk4 wlan1 b -n "`printf \"Riolu\x00x00\Happy\"`" -w t
// /usr/share/mdk4/pocs // poc dir
// for pocs (x) then run `./mdk4_hexdump.sh <filename>`
sudo mdk4 wlan1 x -c 1
sudo mdk4 wlan1 b -c 1 -n 'APT-WOO'


CURL
//curl -d "s=Riolu-Love`printf "\x00\x00"`&p=HomageToTheDoctor^W^" -X POST -i -o CURL-POST.txt http://192.168.4.1/#p
//curl --verbose --include --raw --no-buffer --no-clobber --output CURL-POST.1.txt --data-binary "s=Riolu-Love`printf "\x00\x00"`&p=HomageToTheDoctor^W^" -X POST http://192.168.4.1/#p
//curl --output curl/CURL-POST-`date +%s`.txt --no-keepalive --no-clobber --trace curl/trace-log-`date +%s`.txt --raw --no-buffer --include --data-binary @dats/post-ssid-pass-nullbyte.dat http://192.168.4.1


// printf "s=Riolu-Love\x00\x00&p=HomageToTheDoctor^\$^" > dats/post-ssid-pass-nullbyte.dat;
--data-urlencode
--data-binary name@file
--data ( -d )
-H ( --header ) // curl -H "Host: nugget.com" http://192.168.4.1
--json // curl --json '{"user":"root"}' http://192.168.4.1
--output


//buffering

wlan.ra == f4:12:fa:93:e0:dd || wlan.ta == f4:12:fa:93:e0:dd || wlan.ra == d8:3a:dd:1d:51:8b || wlan.ta == d8:3a:dd:1d:51:8b

nugget mac = f4:12:fa:93:e0:dd
rpi2 wlan0 mac = d8:3a:dd:1d:51:8b

NEXT STEPS:
* try to break wifi scanner with broken packets
    - try to break network manager web page with broken packets from scanner
* try to break network attach s=&p= with broken junk
* broadcast broken ssid and try to connect

